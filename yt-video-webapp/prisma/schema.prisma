generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CONTRIBUTOR
  GUEST
}

enum Ideology {
  ANTI_SJW
  CONSPIRACY
  RELIGIOUS_CONSERVATIVE
  PARTISAN_RIGHT
  BLACK
  QANON
  LGBT
  LIBERTARIAN
  SOCIAL_JUSTICE
  SOCIALIST
  PARTISAN_LEFT
  MRA
  ANTI_THEIST
  WHITE_IDENTITARIAN

  // Additional for TAGS
  POLITICIAN
  EDUCATIONAL
  STATE_FUNDED
  ORGANIZED_RELIGION
}

enum LR {
  LEFT
  RIGHT
  CENTER
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  email_verified DateTime?
  image          String?
  password       String?
  role           UserRole  @default(CONTRIBUTOR)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
}

model Channel {
  id            String     @id @default(cuid())
  yt_channel_id String     @unique
  name          String
  lr            LR
  tags          Ideology[]
  ideology      Ideology
  relevance     Float
  country       String
  logo_url      String
  from_date     DateTime
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt

  videos Video[]
}

model Video {
  id            String    @id @default(cuid())
  yt_video_id   String    @unique @db.VarChar(11)
  yt_channel_id String
  title         String
  description   String
  publish_date  DateTime?
  keywords      String[]
  length        Int
  views         Int
  thumbnail_url String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  transcripts Transcript[]
  summaries   Summary[]

  channel Channel @relation(fields: [yt_channel_id], references: [yt_channel_id])
}

model Transcript {
  id           String   @id @default(cuid())
  yt_video_id  String
  order        Int
  start_time   String?
  end_time     String?
  text         String
  speaker_name String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  video Video @relation(fields: [yt_video_id], references: [yt_video_id])
}

model Summary {
  id          String   @id @default(cuid())
  yt_video_id String
  text        String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  video Video @relation(fields: [yt_video_id], references: [yt_video_id])
}
